#!/usr/bin/env bash

. ~/bin/helpers.sh


dumpall() {
	printf "# duti formatted dump of all system UTI/file extension/MIME type associations\n"
	printf '# Generated by `%s dumpall` on host "%s" at %s\n\n' "$(get_script_name)" "$(hostname -s)" "$(date)"

	if [[ $1 == '-i' ]]; then
		local printinvalid=1
	else
		local printinvalid=
	fi
	local lsregister=$(mdfind -name 'lsregister' -onlyin /System/Library/)
	local utis=$(${lsregister} -dump | grep '[[:space:]]uti:' | awk '{ print $2 }' | sort | uniq)

	local padding=$(printf '%0.1s' " "{1..80})
	local padlength=80
	# We need to forward-declare this, otherwise the 'local' keyword will change $? to '0', masking
	# the return value of `duti`
	local handler

	printf '# UTI associations\n'
	for uti in $utis; do
		handler=$(duti -d "$uti" 2>/dev/null)
		local retval="$?"
		if [[ ${retval} == 0  && $handler != __dummy__ ]]; then
			printf '%s ' "$handler"
			local n=$((padlength - ${#handler} - ${#uti} - 5))
			if [[ $n < 1 ]]; then n=0; fi
			printf '%*.*s' 0 "$n" "$padding"
			printf '%s all\n' "$uti"
		else
			if [[ $printinvalid ]]; then
				printf '%s\n' "$uti" >&2
			fi
		fi
	done

	printf '\n# File extension associations\n'
	local extensions=$(${lsregister} -dump | grep '[[:space:]]tags:' | grep -o -P "[[:space:]]\K\.[^,\'\*]+" | sort | uniq)
	local report
	for extension in $extensions; do
		report=$(duti -x "${extension}" 2>/dev/null)
		if [[ $? == 0 ]]; then
			handler=$(echo "$report" | sed -n 3p)
			printf '%s ' "$handler"
			local n=$((padlength - ${#handler} - ${#extension} - 5))
			if [[ $n < 1 ]]; then n=0; fi
			printf '%*.*s' 0 "$n" "$padding"
			printf '%s all\n' "$extension"
		else
			if [[ $printinvalid ]]; then
				printf '%s\n' "$extension" >&2
			fi
		fi
	done

	printf '\n# MIME type associations\n'
	local mimes=$(${lsregister} -dump | grep '[[:space:]]bindings:' | grep -o -P '[[:space:]](?!bindings)\K[A-Za-z][^,\*\n:]+(?=:)' | sort | uniq)
	for mime in $mimes; do
		handler=$(duti -d "$mime" 2>/dev/null)
		local retval="$?"
		if [[ ${retval} == 0 && $handler != __dummy__ ]]; then
			printf '%s ' "$handler"
			local n=$((padlength - ${#handler} - ${#mime} - 5))
			if [[ $n < 1 ]]; then n=0; fi
			printf '%*.*s' 0 "$n" "$padding"
			printf '%s all\n' "$mime"
		else
			if [[ $printinvalid ]]; then
				printf '%s\n' "$mime" >&2
			fi
		fi
	done
	
}

################################################################################

if [[ $(which duti) == '' ]]; then
	wrap 'Error! Can not find `duti` binary. `duti` must be installed and in your path to continue. You can install it with homebrew:\n'  >&2
	wrap '  $ brew install duti\n\n' >&2
	wrap 'Exiting\n' >&2
	exit 1
fi


if [[ $1 == dumpall ]]; then
	shift
	dumpall $@
else
	if [[ $# < 1 ]]; then
		echo -e "Error! No command given\n" >&2
	elif [[ $1 != -h && $1 != --help ]]; then
		echo -e "Error! Unknown command '$1'\n" >&2
	fi

	sname=$(get_script_name)
	echo "Work with file type associations on Mac OS X"
	echo "  Usage: ${sname} [-h|--help] <cmd> [<options>]"
	echo
	echo "Commands:"
	echo "  ${sname} dumpall [-i]      # Print all file associations in duti format"
	echo "                             #   -i will also print unassigned UTIs to stderr"
fi

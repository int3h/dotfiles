# Use Vi, not Emacs, style editing
set editing-mode vi

# Show all completions as soon as I press tab, even if there's more than one
set show-all-if-ambiguous on
# Ignore case
set completion-ignore-case on
# on menu-complete, first display the common prefix, then cycle through the
# options when hitting TAB
set menu-complete-display-prefix on

# Append a '/' to completed symlinks to directories
set mark-symlinked-directories on

# Display completions using different colors for their file types
set colored-stats on

# Don't expand '~' into the absolute path to our home directory when doing word completion
set expand-tilde off

# !!!IMPORTANT: these values are currently overriden (using dynamic values) in .bash_profile.

# Insert a string at the start of the line to indicate which Vi mode we're in (insert or command)
#set show-mode-in-prompt on

# Sets the string to be inserted at the start of the line for each Vi mode.
#
# By inserting ANSII term color/style escape codes, we can change the style of $PS1 depending on the
# mode. Be sure to start each string with a 'term reset' command (to clean up leftover styles set by
# any previous term output), and that $PS1 *doesn't* do a term reset at its start (so that color
# codes we insert with these strings won't be cleared, and will apply to $PS1's text).
#
# NOTE: use "\1" and "\2" instead of "\[" and "\]" to indicate 'start/end escape sequence'
# NOTE: you can set this programatically in Bash (e.g., in your .bash_profile) using
# `bind 'set vi-cmd-mode-string <your string here>'`. You can also re-read
#set vi-cmd-mode-string \1\e[0m\2::: \1\e[7m\2
#set vi-ins-mode-string \1\e>>> [0m\2

###########################################################
# Keymaps for when we're in command mode (e.g., after hitting ESC)
set keymap vi-command

# Insert the arguments from the last command
"p": "i !!*\r"

# When hitting option-up/option-down, cycle through the previous commands
# which start with the prefix you've entered, rather than just cycling through
# the last entered commands.
# In OS X's Terminal.app preferences, I have 'Use option as meta key' off, and
# have mapped "option cursor up" to "\033\033[A" and "option cursor down" to
# "\033\033[B".
# Feel free to bind to whatever you want, or delete the first '\e' in the keymap,
# and then plain up/down will do a history search.
"\e\e[A": history-search-backward
"\e\e[B": history-search-forward

###########################################################
# Keymaps for when we're in insert (i.e., typing stuff in) mode
set keymap vi-insert

# Pressing tab will list all completions & select the first one. Pressing it again will cycle
# through available completions.
TAB: menu-complete
# Shift-TAB cycles completions backward
"\e[Z": menu-complete-backward

# Option-up/option-down should also apply to insert mode
"\e\e[A": history-search-backward
"\e\e[B": history-search-forward

# Needed to negate the binding of 'p' we do in command mode above
"p": self-insert

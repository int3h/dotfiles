////////////////////////////////////////////////////////////////////////////////////////////////////
// Variable import/defaults
////////////////////////////////////////////////////////////////////////////////////////////////////

@import (reference) "syntax-variables";
// Default value if not defined
@ui-fg: @syntax-text-color;
@import (reference) "ui-variables";

// Convenience to save us from having to add a `atom-text-editor::shadow` selector for editors
atom-text-editor::shadow:extend(atom-text-editor all) {}


////////////////////////////////////////////////////////////////////////////////////////////////////
// Sntax theme tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

.chalk-dark-tweaks() when (@syntax-background-color = #151515) {
  // Lighten up the text color of comments
  atom-text-editor {
    .comment,
    .punctuation.definition.comment {
      color: rgba(150, 150, 150, 70%);
    }
  }
}
.chalk-dark-tweaks();


.polaris-syntax-theme-tweaks() when (@syntax-wrap-guide-color = #282a2e) and (@syntax-background-color = #262c31) {
  atom-text-editor, :host {
    .wrap-guide {
      background-color: darken(@syntax-background-color, 4%); //@syntax-indent-guide-color;
    }
  }

  atom-text-editor.is-focused, atom-text-editor.is-focused::shadow, :host.is-focused {
    .line.cursor-line {
      background-color: @syntax-gutter-background-color-selected;

      .indent-guide {
        color: @syntax-background-color;
      }
    }
  }
}
.polaris-syntax-theme-tweaks();


// .gruvbox-tweaks() when (@syntax-text-color = rgba(235, 219, 178, 0.5)) {
.gruvbox-tweaks() {
  // Gruvbox uses yellow for editor text, which is unreadable in UI text boxes w/ a light UI theme
  atom-text-editor::shadow *, atom-text-editor .text {
    color: @ui-fg !important; // Use the UI theme's foreground color, not syntax theme's
    text-decoration: line-through;
  }

  div.settings-view atom-text-editor::shadow[mini] {
    .text .source, .string.unquoted.heredoc, .source .source {
      color: @ui-fg !important;
    }
  }
}
// .gruvbox-tweaks();


.robin-hood-tweaks() when (@syntax-wrap-guide-color = #fabd2f) {
  atom-text-editor atom-text-editor-minimap {
    border-left: 3px solid fadeout(@syntax-wrap-guide-color, 60%) !important;
  }
}
// .robin-hood-tweaks();


.isotope-tweaks() {
  html, body { font-size: 14px; }
  .tree-view { font-size: 12px; }
}
// .isotope-tweaks();


.genisis-tweaks() {
  @tab-height: 40px;

  .tab-bar .tab {
    font-size: 12px;
  }

  @import "../../../../../.atom/packages/genesis-ui/styles/tabs";
}
// .genisis-tweaks();


.native-ui-tweaks() {
  .tree-view-resizer {
    border-bottom: 1px solid #C7C7C7;
  }
}
.native-ui-tweaks();



////////////////////////////////////////////////////////////////////////////////////////////////////
// File Icon package tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

// Change the icon for JavaScript files from a thin, hard-to-see outline, to a beefy block icon
.custom-js-icon() {
  @import "../../../../../.atom/packages/file-icons/styles/icons";
  @import "../../../../../.atom/packages/file-icons/styles/items";

  .js-custom-icon { .mf; content: "\f129"; font-size: large; }

  @{pane-tab-override}, .icon-file-text {
    &[data-name$=".js"]:before,
    &[data-name$=".es6"]:before,
    &[data-name$=".es"]:before,
    &[data-name$=".js.erb"]:before  {
      .js-custom-icon;
    }
  }
}
.custom-js-icon();


////////////////////////////////////////////////////////////////////////////////////////////////////
// Tree view tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

  }

.tree-view-tweaks() {
  // .tree-view {
  //   background: lighten(@base-background-color, 0%);
  //   border-right: 1px solid @pane-item-border-color;
  //
  //   .selected:before {
  //     background: darken(@base-background-color, 8%); //hsla(@ui-hue, @ui-saturation, 50%, .25);
  //   }
  // }
  //
  // .list-group li:not(.list-nested-item),
  // .list-tree li:not(.list-nested-item),
  // .list-group li.list-nested-item > .list-item,
  // .list-tree li.list-nested-item > .list-item {
  //   line-height: 1.85em;
  // }
}
// .tree-view-tweaks();


////////////////////////////////////////////////////////////////////////////////////////////////////
// Status bar tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

.status-bar-tweaks() {
  status-bar  {
    @sb-border-color: contrast(@tool-panel-background-color, darken(@base-border-color, 10%), lighten(@base-border-color, 10%));
    @sb-border-image: linear-gradient(@tool-panel-background-color, @sb-border-color 20%, @sb-border-color 80%, @tool-panel-background-color);

    // Add border between sidebar and status bar
    // border-left: 1px solid @sb-border-color;

    .status-bar-left {
      // Add border on the right of every block in the left status bar
      & > .inline-block,
      & > linter-bottom-container > .inline-block {
        margin-right: 1em;
        padding-right: 1em;

        border-width: 0 1px 0 0;
        border-image: @sb-border-image 0 1 0 0 stretch;
      }

      // Make the linter status be the last item on the left side, by floating everything else left
      & > div { float: left; }
    }

    .status-bar-right {
      // Add border on the left of every block in the right status bar
      & > .inline-block,
      & > linter-bottom-container > .inline-block,
      & > .git-view > .inline-block {
        padding-left: 1em;
        margin-left: 1em;

        border-width: 0 0 0 1px;
        border-image: @sb-border-image 0 0 0 1 stretch;
      }
    }

    // Make the linter tabs more vertically centered
    linter-bottom-tab { margin-bottom: 0.2em; }
  }
}
.status-bar-tweaks();


////////////////////////////////////////////////////////////////////////////////////////////////////
// Minimap tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

.minimap-tweaks() {
  atom-text-editor {
    // For minimap, use slightly lighter/darker (whichever contrasts more) variant of editor bg
    @minimap-bgcolor: contrast(@syntax-background-color,
      darken(@syntax-background-color, 2%),
      lighten(@syntax-background-color, 2%));

    atom-text-editor-minimap {
      background: @minimap-bgcolor;
      border-left: 2px solid fadein(@syntax-wrap-guide-color, 15%);
      // Put some space between the border & minimap content
      &::shadow canvas { left: 2px; }
    }

    // Tweak colors of minimap decorations
    .minimap {
      // More subtle git diff highlights
      .line {
        .git-line-modified { background: fadeOut(@syntax-color-modified, 40%); }
        .git-line-added    { background: fadeOut(@syntax-color-added, 30%); }
        .git-line-removed  { background: fadeOut(@syntax-color-removed, 60%); }
      }

      // More distinct current lint highlight
      .cursor-line { background: mix(@minimap-bgcolor, @syntax-cursor-color, 40%); }
    }

    // Hide the editor's native scrollbar, so that we can use the minimap exclusively to scroll
    .vertical-scrollbar { display: none; }
  }
}
.minimap-tweaks();


////////////////////////////////////////////////////////////////////////////////////////////////////
// Autocomplete+ package tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

autocomplete-suggestion-list {
  &.select-list.popover-list {
    .suggestion-description {
      padding-top: 7px;
      padding-bottom: 7px;
      border-top: 1px solid @base-border-color;
    }

    .suggestion-description-content {
      font-size: @font-size;
      color: fade(@text-color-subtle, 100%);
    }

    &.suggestion-list-scroller { }
  }

  .icon.snippet { color: darken(@syntax-color-snippet, 20%); }
}


////////////////////////////////////////////////////////////////////////////////////////////////////
// Additional tweaks
////////////////////////////////////////////////////////////////////////////////////////////////////

// Use regular, not subpixel, antialiasing by default
body.standard-antialiasing atom-text-editor { -webkit-font-smoothing: antialiased; }

// Subpixel AA enabled when <body> has class `subpixel-antialiasing` applied to it
body.subpixel-antialiasing {
  atom-text-editor,
  .tab-bar .tab .title {
    -webkit-font-smoothing: subpixel-antialiased;
  }
}

// Always disable subpixel AA for linter message badges; it looks bad at small size + colored BG
linter-panel .badge { -webkit-font-smoothing: antialiased; }

.language-markdown-tweaks() {
  atom-text-editor .text.md {
    .list {
      & { color: @syntax-text-color; }
      & > .punctuation { color: #b57b91; }
    }

    .destination.link, .underline.link {
      color: hsl(286, 60%, 67%);
    }

    .heading {
      font-weight: bold;

      @heading-color: hsl(207, 82%, 66%);
      & > .heading-1 { color: mix(@heading-color, @syntax-text-color, 100%); }
      & > .heading-2 { color: mix(@heading-color, @syntax-text-color, 85%); }
      & > .heading-3 { color: mix(@heading-color, @syntax-text-color, 70%); }
      & > .heading-4 { color: mix(@heading-color, @syntax-text-color, 55%); }
      & > .heading-5 { color: mix(@heading-color, @syntax-text-color, 40%); }
      & > .heading-6 { color: mix(@heading-color, @syntax-text-color, 35%); }
    }
  }
}
.language-markdown-tweaks();

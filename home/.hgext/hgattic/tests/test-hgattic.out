 hgattic extension - manage uncommitted changes with a set of named patches

This extension lets you create patches from uncommited changes using its
'shelve' command. Shelved changes are unapplied from the working copy and
stored as patches in the .hg/attic directory.

They can be later restored using the 'unshelve' command, which merges the
changes back into the working copy.

This allows task switching between many patches in a single repository.

As applied patches are just changes in the working copy they are not part of
the project history but can, of course, be commited if desired.

Having all known patches in the .hg/attic directory allows you to easily share
patch sets between repositories and even control version them.

Common tasks (use 'hg help command' for more details):

attic-shelve (shelve):
    store the current working copy changes in a patch in the attic and prepare
    to work on something else unapplying those changes
attic-display (attic, ls):
    list the patches in the attic
attic-unshelve (unshelve):
    activate a patch to work on and merge its changes into the working copy

list of commands:

 attic-display    lists the available patches in the attic
 attic-shelve     move changes from working copy to the attic
 attic-unshelve   applies a patch from the attic to the working copy

use "hg -v help hgattic" to show aliases and global options

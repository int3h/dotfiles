#!/usr/bin/env bash

if [[ "$OS" == "Linux" ]]; then
	printf 'WARNING: Mac shell aliases sourced on Linux system\n' >&2
fi

# Detailed file listing; show hidden files; append a '/' to directories; use human-readable sizes
alias ls='command ls -lAOph'
# Like our regular detailed `ls`, but also show extended attributes
alias lsx='command ls -lAOphe@'
# Simplified `ls`: don't show hidden files
alias lsd='command ls -lOph'

# Run n make processes in parallel, where n = (number of CPUs) + 1
alias make="make -j$(( $(sysctl -n hw.ncpu) + 1 ))"

alias psa='ps -Axww -o pid,user,cpu,command'
alias psal='ps -Axww -o pid,user,cpu,command | less -S'

alias bashrc="find ~/.config/bash -not -name 'shell_history' -not -type d -print0 | command xargs -0 mvim ~/.bash_profile ~/.bashrc ~/.bash_logout "

# Homebrew's `brew` command is a single monolithic binary that processes all homebrew commands, so
# we can't modify/add commands via aliases. This script wraps brew and allows us to do so.
if [[ -x ${HOME}/bin/mac/brew-wrapper ]]; then
    alias brew="$HOME/bin/mac/brew-wrapper"
fi

# List all the preferences domains currently available
alias domains='defaults domains | sed "s:, :\\`echo -e "\n\r"`:g"'

# Show all items currently excluded from backup by their HFS+ extended attributes
alias backup-excluded="sudo mdfind \"com_apple_backup_excludeItem = 'com.apple.backupd'\";\
defaults read /System/Library/CoreServices/backupd.bundle/Contents/Resources/StdExclusions.plist UserPathsExcluded | grep -oE --color=never -e '\"[^\"]+\"' | xargs -I {} printf \"$HOME/{}\n\";\
defaults read /Library/Preferences/com.apple.TimeMachine.plist ExcludeByPath | grep -oE --color=never -e '^\\W*\"\\K[^\"]+';\
defaults read /Library/Preferences/com.apple.TimeMachine.plist SkipPaths | grep -oE --color=never -e '^\\W*\"\\K[^\"]+';\
defaults read /System/Library/CoreServices/backupd.bundle/Contents/Resources/StdExclusions.plist ContentsExcluded | grep -oE --color=never -e '^\\W*\"\\K[^\"]+';\
defaults read /System/Library/CoreServices/backupd.bundle/Contents/Resources/StdExclusions.plist FileContentsExcluded | grep -oE --color=never -e '^\\W*\"\\K[^\"]+';\
defaults read /System/Library/CoreServices/backupd.bundle/Contents/Resources/StdExclusions.plist PathsExcluded | grep -oP --color=never -e '^\\W*\"\\K[^\"]+';"


# Check an OpenCL file for compilation errors. (Preprocesses, compiles, and assembles the file, with
# all warnings, and discards the generated file.)
alias opencl-check='/System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/openclc -c -x cl -cl-std=CL1.1 -Weverything -o /dev/null'


alias defs='defaults read'

alias findlib="find $HOME/Library \
\( -not -path '$HOME/Library/Mail/*' -not -path '$HOME/Library/Application Support/Google/Chrome*/Default/File System/*' \
-not -path '$HOME/Library/Application Support/Google/Chrome*/Default/IndexedDB/*' \
-not -path '$HOME/Library/Application Support/Google/Chrome*/Default/Local Storage/*' \
-not -path '$HOME/Library/Application Support/Google/Chrome*/Default/Pepper Data/*' \
-not -path '$HOME/Library/Calendars/*' \) \
-iname "


# vim: set tabstop=4 shiftwidth=4 textwidth=100 noexpandtab foldmethod=manual filetype=sh:
